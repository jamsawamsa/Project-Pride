<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables
state = e_state.idle;
dir = -1;
moveSpeed = 2;
grav = 0.35;
hSpd = 0;
vSpd = 0;
//hitBoxWidth = 22;
//hitBoxHeight = 36;
hitBoxWidth = sprite_width;
hitBoxHeight = sprite_height;
fearOfHeight = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
hSpd = dir * moveSpeed;
vSpd += grav;

// horizontal collision
if (place_meeting(x + hSpd, y, obj_tile)) {
    while (!place_meeting(x + sign(hSpd), y, obj_tile)) {
        x += sign(hSpd);
    }
    hSpd = 0;
    dir *= -1;
}
// handle image flips, not yet pixel perfect when accounting for even width sprites
if (hSpd  &gt; 0) {
    image_xscale = 1;
}
else if (hSpd &lt; 0) {
    image_xscale = -1;
}
x += hSpd;
// vertical collision
if (place_meeting(x, y + vSpd, obj_tile)) {
    while (!place_meeting(x, y + sign(vSpd), obj_tile)) {
        y += sign(vSpd);
    }
    vSpd = 0;
    
    if (fearOfHeight) &amp;&amp; !position_meeting(x + (hitBoxWidth/2)*dir, y + (hitBoxHeight/2) + 8, obj_tile) {
        dir *= -1;
    }
}

y += vSpd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
